association.findByAddressMedium=select * from "association" where address = :address and medium = :medium
association.insertOrUpdate=insert into "association"(address, medium, mxid, created, expired, ts) \
  values(:address, :medium, :mxid, now, :expired, :ts)                                            \
  on conflict (address, medium) do nothing

session.insertOrUpdate=insert into "session"(sid, token, client_secret, address, medium, send_attempt, next_link, created)   \
  values(:sid, :token, :client_secret, :address, :medium, :send_attempt, :next_link, now)                                    \
  on conflict (client_secret, address, medium) do update                                                                     \
  set                                                                                                                        \
    sid = :sid,                                                                                                              \
    send_attempt = :send_attempt,                                                                                            \
    token = :token,                                                                                                          \
    created = now
session.findBySecretAndEmail=select * from "session" where client_secret = :client_secret and email = :email
session.findBySecretAndSid=select * from "session" where client_secret = :client_secret and sid = :sid
session.findBySecretTokenAndSid=select * from "session" where client_secret = :client_secret and token = :token and sid = :sid
session.findOldest=delete from "session" where validated is null and created + interval '1 day' < now
session.validate=update "session" set validated = now where sid = :sid

invitation.insert=insert into "invite"(medium, address, room_id, sender, token, public_key, display_name) \
  values(:medium, :address, :room_id, :sender, :token, :public_key, :display_name)
