/*
 * Copyright sablintolya@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.github.ma1uta.matrix;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * UnsignedData.
 */
@ApiModel(description = "Unsigned addition data.")
public class Unsigned {

    /**
     * The time in milliseconds that has elapsed since the event was sent. This field is generated by the local homeserver, and may
     * be incorrect if the local time on at least one of the two servers is out of sync, which can cause the age to either be negative
     * or greater than it actually is.
     */
    @ApiModelProperty(
        value = "The time in milliseconds that has elapsed since the event was sent. This field is generated by the local "
            + "homeserver, and may be incorrect if the local time on at least one of the two servers is out of sync, which can cause "
            + "the age to either be negative or greater than it actually is."
    )
    private Long age;

    /**
     * Optional. The event that redacted this event, if any.
     */
    @ApiModelProperty(
        name = "redacted_because",
        value = "The event that redacted this event, if any."
    )
    @JsonProperty("redacted_because")
    private Event redactedBecause;

    /**
     * The client-supplied transaction ID, if the client being given the event is the same one which sent it.
     */
    @ApiModelProperty(
        name = "transaction_id",
        value = "The client-supplied transaction ID, if the client being given the event is the same one which sent it."
    )
    @JsonProperty("transaction_id")
    private String transactionId;

    /**
     * Optional. The previous content for this state. This will be present only for state events appearing in the timeline.
     * If this is not a state event, or there is no previous content, this key will be missing.
     */
    @ApiModelProperty(
        name = "prev_content",
        value = "The previous content for this state. This will be present only for state events "
            + "appearing in the timeline. If this is not a state event, or there is no previous content, this key will be missing."
    )
    @JsonProperty("prev_content")
    private EventContent prevContent;

    public Long getAge() {
        return age;
    }

    public void setAge(Long age) {
        this.age = age;
    }

    public Event getRedactedBecause() {
        return redactedBecause;
    }

    public void setRedactedBecause(Event redactedBecause) {
        this.redactedBecause = redactedBecause;
    }

    public String getTransactionId() {
        return transactionId;
    }

    public void setTransactionId(String transactionId) {
        this.transactionId = transactionId;
    }

    public EventContent getPrevContent() {
        return prevContent;
    }

    public void setPrevContent(EventContent prevContent) {
        this.prevContent = prevContent;
    }
}
