buildscript {
    ext.kotlin_version = '1.2.21' // Required for Kotlin integration
    ext.spring_boot_version = '1.5.10.RELEASE'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" as String
        // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version" as String
        // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version" as String
    }
}

apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: "kotlin-spring" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

repositories {
    jcenter()
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    compile project(':client-api')

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" as String // Required for Kotlin integration
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-jersey'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile 'org.springframework.boot:spring-boot-configuration-processor'
    compile 'org.flywaydb:flyway-core:5.0.6'
    compile 'org.postgresql:postgresql:42.1.4'
    compile 'com.zaxxer:HikariCP:2.7.6'
    compile 'com.github.nitram509:jmacaroons:0.3.1'
    compile 'javax.servlet:javax.servlet-api'

    providedRuntime 'org.springframework.boot:spring-boot-starter-undertow'

    testCompile 'org.springframework.boot:spring-boot-starter-test'

    optional 'org.springframework.boot:spring-boot-configuration-processor'
}

bootRun {
    main = 'io.github.ma1uta.jeon.server.ServerKt'
    addResources = true
}

bootRepackage {
    mainClass = 'io.github.ma1uta.jeon.server.ServerKt'
    executable = true
}

compileJava.dependsOn(processResources)
