# user queries
user.read=select * from "user" where id = :id
user.insert=insert into "user"(id, display_name, avatar_url, password, kind) values(:id, :display_name, :avatar_url, :password, :kind)

# device queries
device.insertOrUpdate=insert into "device"(device_id, user_id, display_name, last_seen_ip, last_seen_ts) values \
  (:device_id, :user_id, :display_name, :last_seen_ip::text, :last_seen_ts) on conflict (device_id) do update \
  set device_id = :device_id, user_id = :user_id, display_name = :display_name, last_seen_ip = :last_seen_ip, last_seen_ts = :last_seen_ts
device.updateLastSeen=update "device" set last_seen_ip = :last_seen_ip, last_seen_ts = :last_seen_ts where device_id = :device_id and user_id = :user_id

# token queries
token.insertOrUpdate=insert into "token"(token, device_id, user_id) values(:token, :device_id, :user_id)
token.deleteByUserAndDevice=delete from "token" where user_id = :user_id and device_id = :device_id
token.findByToken=select u.id u_id, u.display_name u_display_name, u.avatar_url u_avatar_url, u.password u_password, u.kind u_kind, \
  d.device_id d_device_id, d.display_name d_display_name, d.last_seen_ip d_last_seen_ip, d.last_seen_ts d_last_seen_ts, \
  t.token t_token from "token" t join "device" d on t.device_id = d.device_id join "user" u on t.user_id = u.id \
  where t.token = :token
token.deleteByToken=delete from "token" where token = :token and device_id = :device_id and user_id = :user_id
