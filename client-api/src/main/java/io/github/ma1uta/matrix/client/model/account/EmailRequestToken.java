/*
 * Copyright sablintolya@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.github.ma1uta.matrix.client.model.account;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Request for the proxies the identity server API validate/email/requestToken.
 */
@ApiModel(description = "Request for the proxies the identity server API validate/email/requestToken.")
public class EmailRequestToken {

    /**
     * Required. The hostname of the identity server to communicate with. May optionally include a port.
     */
    @ApiModelProperty(
        name = "id_server",
        value = "The hostname of the identity server to communicate with. May optionally include a port.",
        required = true
    )
    @JsonProperty("id_server")
    private String idServer;

    /**
     * Required. A unique string generated by the client, and used to identify the validation attempt.
     * It must be a string consisting of the characters [0-9a-zA-Z.=_-]. Its length must not exceed 255 characters and it must not be empty.
     */
    @ApiModelProperty(
        name = "client_secret",
        value = "A unique string generated by the client, and used to identify the validation attempt. It must be a string consisting"
            + " of the characters [0-9a-zA-Z.=_-]. Its length must not exceed 255 characters and it must not be empty.",
        required = true
    )
    @JsonProperty("client_secret")
    private String clientSecret;

    /**
     * Required. The email address to validate.
     */
    @ApiModelProperty(
        value = "The email address to validate",
        required = true
    )
    private String email;

    /**
     * Required. The server will only send an email if the send_attempt is a number greater than the most recent one which it has seen,
     * scoped to that email + client_secret pair. This is to avoid repeatedly sending the same email in the case of request retries
     * between the POSTing user and the identity server. The client should increment this value if they desire a new email (e.g. a reminder)
     * to be sent.
     */
    @ApiModelProperty(
        name = "send_attempt",
        value = "The server will only send an email if the send_attempt is a number greater than the most recent one which it has seen,"
            + " scoped to that email + client_secret pair. This is to avoid repeatedly sending the same email in the case of request"
            + " retries between the POSTing user and the identity server.The client should increment this value if they desire a new"
            + " email(e.g.a reminder) to be sent .",
        required = true
    )
    @JsonProperty("send_attempt")
    private String sendAttempt;

    public String getIdServer() {
        return idServer;
    }

    public void setIdServer(String idServer) {
        this.idServer = idServer;
    }

    public String getClientSecret() {
        return clientSecret;
    }

    public void setClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getSendAttempt() {
        return sendAttempt;
    }

    public void setSendAttempt(String sendAttempt) {
        this.sendAttempt = sendAttempt;
    }
}
